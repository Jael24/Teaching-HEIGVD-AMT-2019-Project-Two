swagger: '2.0'
info:
  version: '1.0.0'
  title: Manage account
  description: An API to manage account
host: localhost:8080
basePath: /api/v1
schemes:
  - http
paths:
  /users:
    post:
      description: create a user
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all users
      operationId: getUsers
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'

  /users/{id}:
    patch:
      description: modify the password of a user
      operationId: modifyPassword
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          required: true
          type: string
          description: The user's id
        - in: body
          name: patchUser
          description: The data to modify
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
              newPass:
                type: string
              isBlocked:
                type: boolean
              isValidated:
                type: boolean
      responses:
        201:
          description: Modified

  /login:
    post:
      description: login - receive JWT token
      operationId: login
      consumes:
        - application/json
      parameters:
        - name: login
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/JWTToken'
        '403':
          description: Access denied
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      isBlocked:
        type: boolean
      isValidated:
        type: boolean
      isAdmin:
        type: boolean
    required:
      - email
      - first_name
      - last_name
      - password
      - isBlocked
      - isValidated
      - isAdmin
  JWTToken:
    type: object
    properties:
      token:
        type: string
    required:
      - token