swagger: '2.0'
info:
  version: '1.0.0'
  title: Manage account
  description: An API to manage account of actors
host: localhost:8080
basePath: /api/v1
schemes:
  - http
paths:
  /actors:
    post:
      description: create an actor
      operationId: createActor
      consumes:
        - application/json
      parameters:
        - name: actor
          in: body
          required: true
          schema:
            $ref: '#/definitions/Actor'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all actors
      operationId: getActors
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Actor'
    patch:
      description: modify the password of an actor
      operationId: modifyPassword
      consumes:
        - application/json
      parameters:
        - in: body
          name: patchActor
          description: The data to modify
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
              newPass:
                type: string
              isBlocked:
                type: boolean
              isValidated:
                type: boolean
      responses:
        201:
          description: Modified

  /login:
    post:
      description: login - receive JWT token
      operationId: login
      consumes:
        - application/json
      parameters:
        - name: login
          in: body
          required: true
          schema:
            $ref: '#/definitions/JWTToken'
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/JWTToken'
definitions:
  Actor:
    type: object
    properties:
      email:
        type: string
    required:
      - email
  Movie:
    type: object
    properties:
      id:
        type: number
      title:
        type: string
    required:
      - id
      - title
  Character:
    type: object
    properties:
      id:
        type: number
      actor:
        type: string
      movie:
        type: number
      charName:
        type: string
    required:
      - id
      - actor
      - movie
      - charName
  JWTToken:
    type: object
    properties:
      token:
        type: string
    required:
      - token