openapi: 3.0.0
info:
  version: 1.0.0-oas3
  title: Expose cinematographic data
  description: An API which expose actors, characters and movies
host: localhost:8080
basePath: /api/v1
schemes:
  - http

tags:
  - name: actors
    description: Retrieve your actors's activities
  - name: characters
    description: Retrieve the infos about the characters
  - name: movies
    description: Retrieve the infos about the movies

paths:
  /actors:
    get:
      summary: Get all actors
      operationId: getActorByUser
      parameters:
        - in: query
          name: page
          description: page number
          required: false
          type: integer
        - in: query
          name: pageSize
          description: size of page
          required: false
          type: integer
      description: get all the actors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Actor'
          links:
            NextLink:
              $ref: '#/definitions/PageActorRequest'
            LastLink:
              $ref: '#/definitions/PageActorRequest'
            FirstLink:
              $ref: '#/definitions/PageActorRequest'
            PrevLink:
              $ref: '#/definitions/PageActorRequest'
    post:
      description: create an actor
      operationId: createActor
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: actor
          in: body
          required: true
          schema:
            $ref: '#/definitions/Actor'
      responses:
        '201':
          description: created
          schema:
            type: object
  /actors/{id}:
    get:
      description: get an actor
      operationId: getActor
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Actor'
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: The actor's id
    delete:
      description: delete an actor
      operationId: deleteActor
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: The actor's id
      responses:
        200:
          description: deleted
    put:
      description: modify an actor
      operationId: modifyActor
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: actor
          in: body
          required: true
          schema:
            $ref: '#/definitions/Actor'
        - name: id
          in: path
          required: true
          type: integer
          format: int64
          description: The actor's id
      responses:
        200:
          description: updated
  /movies:
    get:
      description: get all movies
      operationId: getMovies
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Movie'
    post:
      description: create a movie
      operationId: createMovie
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: movie
          in: body
          required: true
          schema:
            $ref: '#/definitions/Movie'
      responses:
        '201':
          description: created
          schema:
            type: object
  /movies/{id}:
    get:
      description: get a movie
      operationId: getMovie
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Movie'
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: The movie's id
    delete:
      description: delete a movie
      operationId: deleteMovie
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: The movie's id
      responses:
        200:
          description: deleted
    put:
      description: modify a movie
      operationId: putMovie
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: movie
          in: body
          required: true
          schema:
            $ref: '#/definitions/Movie'
        - name: id
          in: path
          required: true
          type: integer
          format: int64
          description: The movie's id
      responses:
        200:
          description: updated
  /character:
    get:
      description: get all characters
      operationId: getCharacters
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Character'
    post:
      description: create a character
      operationId: createCharacter
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: character
          in: body
          required: true
          schema:
            $ref: '#/definitions/Character'
      responses:
        '201':
          description: created
          schema:
            type: object
  /characters/{id_actor}/{id_movie}:
    get:
      description: get a character
      operationId: getCharacter
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Character'
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id_actor
          required: true
          type: integer
          format: int64
          description: The actor's id
        - in: path
          name: id_movie
          required: true
          type: integer
          format: int64
          description: The movie's id
    delete:
      description: delete a character
      operationId: deleteCharacter
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id_actor
          required: true
          type: integer
          format: int64
          description: The actor's id
        - in: path
          name: id_movie
          required: true
          type: integer
          format: int64
          description: The movie's id
      responses:
        200:
          description: deleted
    put:
      description: modify a character
      operationId: putCharacter
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: character
          in: body
          required: true
          schema:
            $ref: '#/definitions/Character'
        - in: path
          name: id_actor
          required: true
          type: integer
          format: int64
          description: The actor's id
        - in: path
          name: id_movie
          required: true
          type: integer
          format: int64
          description: The movie's id
      responses:
        200:
          description: updated
definitions:
  PageActorRequest:
    description:
    operationId: getActorByUser
    parameters:
      page: '$request.path.page'
      pageSize: '$request.path.page'
  Actor:
    type: object
    properties:
      fullname:
        type: string
      email:
        type: string
      owner:
        type: string
    required:
      - email
      - owner
  Movie:
    type: object
    properties:
      title:
        type: string
      owner:
        type: string
    required:
      - title
      - owner
  Character:
    type: object
    properties:
      actor:
        type: integer
        format: int64
      movie:
        type: integer
        format: int64
      charName:
        type: string
      owner:
        type: string
    required:
      - actor
      - movie
      - charName
      - owner
  JWTToken:
    type: object
    properties:
      token:
        type: string
    required:
      - token